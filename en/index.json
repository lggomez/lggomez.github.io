[{"description":"Setting up an Odroid XU4 as a local network print server","id":0,"section":"","tags":["cups","printer","canon","odroid","networking"],"title":"CUPS on Armbian for boredom and debt","uri":"http://localhost:1313/en/cups_on_armbian_for_boredom_and_debt/"},{"description":"An unexpected duo to help secure your everyday browsing","id":1,"section":"","tags":["dns","pihole","networking"],"title":"A DNS Keyboard","uri":"http://localhost:1313/en/a_dns_keyboard/"},{"description":"The hard but rewarding road of website migration to Hugo","id":2,"section":"","tags":["Golang","Hugo","Migration"],"title":"Migrating the site to Hugo","uri":"http://localhost:1313/en/migrating_the_site_to_hugo/"},{"description":"","id":3,"section":"","tags":["RSS"],"title":"About RSS feed","uri":"http://localhost:1313/en/about_rss_feed/"},{"description":"Emulating an 8 ball toy in Arduino Nano","id":4,"section":"","tags":["Arduino Nano","C","Accelerometer","Display"],"title":"Emulating a magic 8 ball","uri":"http://localhost:1313/en/emulating_a_magic_8_ball/"},{"description":"Creating a network canary device with an Arduino Nano","id":5,"section":"","tags":["Arduino Nano","C","Ethernet","Display"],"title":"Making a network canary","uri":"http://localhost:1313/en/making_a_network_canary/"},{"description":"The state of enums in go and how to create a self validating type generator","id":6,"section":"","tags":["Golang","Enums","Scaffolding"],"title":"The otherworldly landscape of enums in go","uri":"http://localhost:1313/en/the_otherworldly_landscape_of_enums_in_go/"},{"description":"How to generate RSS feeds for zim notebooks","id":7,"section":"","tags":["Golang","Post-mortem"],"title":"Scaffolding RSS feeds from zim notebooks","uri":"http://localhost:1313/en/scaffolding_rss_feeds_from_zim_notebooks/"},{"description":"How to keep using jwt-go without forking or deprecating it in your project","id":8,"section":"","tags":["Golang","JWT"],"title":"Fixing and extending jwt-go without forking","uri":"http://localhost:1313/en/fixing_jwt_go_without_forking/"},{"description":"A matryoshka of bugs ends up in golang itself","id":9,"section":"","tags":["Golang","Post-mortem","Runtime","Compilers"],"title":"That one with the go runtime bug","uri":"http://localhost:1313/en/that_one_with_the_go_runtime_bug/"},{"description":"A reminder that we should log, but maybe not just everything. And a performance rabbit hole","id":10,"section":"","tags":["Golang","Post-mortem"],"title":"Log everything, just not every single thing","uri":"http://localhost:1313/en/log_everything_just_not_every_single_thing/"},{"description":"What happens when you forget a recover on a spawned goroutine?","id":11,"section":"","tags":["Golang","Post-mortem","Intermediate"],"title":"Forgetting that precious recover","uri":"http://localhost:1313/en/forgetting_that_precious_recover/"},{"description":"A tour on advanced exceptions in .NET (circa 2016)","id":12,"section":"","tags":["C#","Generics"],"title":"Advanced exceptions in .NET","uri":"http://localhost:1313/en/advanced_exceptions_in_dotnet/"},{"description":"A tour on advanced generics in .NET (circa 2017)","id":13,"section":"","tags":["C#","Exceptions"],"title":"Advanced Generics in .NET","uri":"http://localhost:1313/en/advanced_generics_in_dotnet/"},{"description":"A post about one of the most overlooked topics by modern developers: memory","id":14,"section":"","tags":["C#"],"title":"Memory: A Forgotten Topic","uri":"http://localhost:1313/en/memory_a_forgotten_topic/"},{"description":"About the blog author, Luis Gabriel Gomez","id":15,"section":"","tags":null,"title":"About me","uri":"http://localhost:1313/en/about/"}]