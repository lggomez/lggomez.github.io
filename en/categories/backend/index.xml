<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Backend on Luis GG - Tales and notes</title>
    <link>https://luisgg.blog/en/categories/backend/</link>
    <description>Recent content in Backend on Luis GG - Tales and notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</managingEditor>
    <webMaster>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</webMaster>
    <copyright>Luis Gabriel Gomez ©2023, All Rights Reserved</copyright>
    <lastBuildDate>Sun, 07 Mar 2021 02:43:15 -0300</lastBuildDate>
    
        <atom:link href="https://luisgg.blog/en/categories/backend/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>The otherworldly landscape of enums in go</title>
        <link>https://luisgg.blog/en/the_otherworldly_landscape_of_enums_in_go/</link>
        <pubDate>Sun, 07 Mar 2021 02:43:15 -0300</pubDate>
        <author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author>
        <atom:modified>Sun, 07 Mar 2021 02:43:15 -0300</atom:modified>
        <guid>https://luisgg.blog/en/the_otherworldly_landscape_of_enums_in_go/</guid>
        <description>The state of enums in go and how to create a self validating type generator</description>
        
        <dc:creator>Luis Gabriel Gómez</dc:creator>
        
        
        
        
          
            
              <category>Golang</category>
            
          
            
              <category>Enums</category>
            
          
            
              <category>Scaffolding</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
            
              <category>Backend</category>
            
          
            
              <category>Intermediate</category>
            
          
        
        
      </item>
      
      <item>
        <title>Scaffolding RSS feeds from zim notebooks</title>
        <link>https://luisgg.blog/en/scaffolding_rss_feeds_from_zim_notebooks/</link>
        <pubDate>Sat, 23 Jan 2021 15:10:02 -0300</pubDate>
        <author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author>
        <atom:modified>Sat, 23 Jan 2021 15:10:02 -0300</atom:modified>
        <guid>https://luisgg.blog/en/scaffolding_rss_feeds_from_zim_notebooks/</guid>
        <description>How to generate RSS feeds for zim notebooks</description>
        
        <dc:creator>Luis Gabriel Gómez</dc:creator>
        
        
        
        
          
            
              <category>Golang</category>
            
          
            
              <category>Post-mortem</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
            
              <category>Backend</category>
            
          
            
              <category>Tutorial</category>
            
          
        
        
      </item>
      
      <item>
        <title>Fixing and extending jwt-go without forking</title>
        <link>https://luisgg.blog/en/fixing_jwt_go_without_forking/</link>
        <pubDate>Fri, 15 Jan 2021 18:56:44 -0300</pubDate>
        <author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author>
        <atom:modified>Fri, 15 Jan 2021 18:56:44 -0300</atom:modified>
        <guid>https://luisgg.blog/en/fixing_jwt_go_without_forking/</guid>
        <description>How to keep using jwt-go without forking or deprecating it in your project</description>
        
        <dc:creator>Luis Gabriel Gómez</dc:creator>
        
        
        
        
          
            
              <category>Golang</category>
            
          
            
              <category>JWT</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
            
              <category>Backend</category>
            
          
            
              <category>Tutorial</category>
            
          
            
              <category>Security</category>
            
          
            
              <category>Bug</category>
            
          
            
              <category>Open Source</category>
            
          
        
        
      </item>
      
      <item>
        <title>That one with the go runtime bug</title>
        <link>https://luisgg.blog/en/that_one_with_the_go_runtime_bug/</link>
        <pubDate>Thu, 07 Jan 2021 00:48:29 -0300</pubDate>
        <author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author>
        <atom:modified>Thu, 07 Jan 2021 00:48:29 -0300</atom:modified>
        <guid>https://luisgg.blog/en/that_one_with_the_go_runtime_bug/</guid>
        <description>A matryoshka of bugs ends up in golang itself</description>
        
        <dc:creator>Luis Gabriel Gómez</dc:creator>
        
        
        
        
          
            
              <category>Golang</category>
            
          
            
              <category>Post-mortem</category>
            
          
            
              <category>Runtime</category>
            
          
            
              <category>Compilers</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
            
              <category>Backend</category>
            
          
            
              <category>Advanced</category>
            
          
            
              <category>Bug</category>
            
          
            
              <category>Open Source</category>
            
          
        
        
          
            
              <category>When gophers attack</category>
            
          
        
      </item>
      
      <item>
        <title>Log everything, just not every single thing</title>
        <link>https://luisgg.blog/en/log_everything_just_not_every_single_thing/</link>
        <pubDate>Sat, 02 Jan 2021 20:27:57 -0300</pubDate>
        <author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author>
        <atom:modified>Sat, 02 Jan 2021 20:27:57 -0300</atom:modified>
        <guid>https://luisgg.blog/en/log_everything_just_not_every_single_thing/</guid>
        <description>A reminder that we should log, but maybe not just everything. And a performance rabbit hole</description>
        
        <dc:creator>Luis Gabriel Gómez</dc:creator>
        
        
        
        
          
            
              <category>Golang</category>
            
          
            
              <category>Post-mortem</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
            
              <category>Backend</category>
            
          
            
              <category>Bug</category>
            
          
        
        
          
            
              <category>When gophers attack</category>
            
          
        
      </item>
      
      <item>
        <title>Forgetting that precious recover</title>
        <link>https://luisgg.blog/en/forgetting_that_precious_recover/</link>
        <pubDate>Sat, 02 Jan 2021 01:32:06 -0300</pubDate>
        <author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author>
        <atom:modified>Sat, 02 Jan 2021 01:32:06 -0300</atom:modified>
        <guid>https://luisgg.blog/en/forgetting_that_precious_recover/</guid>
        <description>What happens when you forget a recover on a spawned goroutine?</description>
        
        <dc:creator>Luis Gabriel Gómez</dc:creator>
        
        
        
        
          
            
              <category>Golang</category>
            
          
            
              <category>Post-mortem</category>
            
          
            
              <category>Intermediate</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
            
              <category>Backend</category>
            
          
            
              <category>Bug</category>
            
          
        
        
          
            
              <category>When gophers attack</category>
            
          
        
      </item>
      
      <item>
        <title>Memory: A Forgotten Topic</title>
        <link>https://luisgg.blog/en/memory_a_forgotten_topic/</link>
        <pubDate>Wed, 23 Dec 2020 23:09:11 -0300</pubDate>
        <author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author>
        <atom:modified>Wed, 23 Dec 2020 23:09:11 -0300</atom:modified>
        <guid>https://luisgg.blog/en/memory_a_forgotten_topic/</guid>
        <description>A post about one of the most overlooked topics by modern developers: memory</description>
        
        <dc:creator>Luis Gabriel Gómez</dc:creator>
        
        
        
        
          
            
              <category>C#</category>
            
          
        
        
          
            
              <category>Programming</category>
            
          
            
              <category>Backend</category>
            
          
            
              <category>Theory</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>
