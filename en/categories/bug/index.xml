<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" xmlns:media="http://search.yahoo.com/mrss/"><channel><title>Bug on Luis GG - Tales and notes</title><link>http://localhost:1313/en/categories/bug/</link><description>Recent content in Bug on Luis GG - Tales and notes</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</managingEditor><webMaster>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</webMaster><copyright>Luis Gabriel Gomez ©2023, All Rights Reserved</copyright><lastBuildDate>Fri, 15 Jan 2021 18:56:44 -0300</lastBuildDate><atom:link href="http://localhost:1313/en/categories/bug/index.xml" rel="self" type="application/rss+xml"/><item><title>Fixing and extending jwt-go without forking</title><link>http://localhost:1313/en/fixing_jwt_go_without_forking/</link><pubDate>Fri, 15 Jan 2021 18:56:44 -0300</pubDate><author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author><atom:modified>Fri, 15 Jan 2021 18:56:44 -0300</atom:modified><guid>http://localhost:1313/en/fixing_jwt_go_without_forking/</guid><description>How to keep using jwt-go without forking or deprecating it in your project</description><dc:creator>Luis Gabriel Gómez</dc:creator><category>Golang</category><category>JWT</category><category>Programming</category><category>Backend</category><category>Tutorial</category><category>Security</category><category>Bug</category><category>Open Source</category></item><item><title>That one with the go runtime bug</title><link>http://localhost:1313/en/that_one_with_the_go_runtime_bug/</link><pubDate>Thu, 07 Jan 2021 00:48:29 -0300</pubDate><author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author><atom:modified>Thu, 07 Jan 2021 00:48:29 -0300</atom:modified><guid>http://localhost:1313/en/that_one_with_the_go_runtime_bug/</guid><description>A matryoshka of bugs ends up in golang itself</description><dc:creator>Luis Gabriel Gómez</dc:creator><category>Golang</category><category>Post-mortem</category><category>Runtime</category><category>Compilers</category><category>Programming</category><category>Backend</category><category>Advanced</category><category>Bug</category><category>Open Source</category><category>When gophers attack</category></item><item><title>Log everything, just not every single thing</title><link>http://localhost:1313/en/log_everything_just_not_every_single_thing/</link><pubDate>Sat, 02 Jan 2021 20:27:57 -0300</pubDate><author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author><atom:modified>Sat, 02 Jan 2021 20:27:57 -0300</atom:modified><guid>http://localhost:1313/en/log_everything_just_not_every_single_thing/</guid><description>A reminder that we should log, but maybe not just everything. And a performance rabbit hole</description><dc:creator>Luis Gabriel Gómez</dc:creator><category>Golang</category><category>Post-mortem</category><category>Programming</category><category>Backend</category><category>Bug</category><category>When gophers attack</category></item><item><title>Forgetting that precious recover</title><link>http://localhost:1313/en/forgetting_that_precious_recover/</link><pubDate>Sat, 02 Jan 2021 01:32:06 -0300</pubDate><author>hello.luisgg@protonmail.com (Luis Gabriel Gómez)</author><atom:modified>Sat, 02 Jan 2021 01:32:06 -0300</atom:modified><guid>http://localhost:1313/en/forgetting_that_precious_recover/</guid><description>What happens when you forget a recover on a spawned goroutine?</description><dc:creator>Luis Gabriel Gómez</dc:creator><category>Golang</category><category>Post-mortem</category><category>Intermediate</category><category>Programming</category><category>Backend</category><category>Bug</category><category>When gophers attack</category></item></channel></rss>